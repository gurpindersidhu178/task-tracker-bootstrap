version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: logbiz_postgres
    environment:
      POSTGRES_DB: logbiz_admin
      POSTGRES_USER: logbiz_user
      POSTGRES_PASSWORD: logbiz_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - logbiz_network

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    container_name: logbiz_redis
    ports:
      - "6379:6379"
    networks:
      - logbiz_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: logbiz_backend
    environment:
      - DATABASE_URL=postgresql://logbiz_user:logbiz_password@postgres:5432/logbiz_admin
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - DEBUG=false
    volumes:
      - ./backend:/app
      - /app/__pycache__
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - logbiz_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: logbiz_celery_worker
    environment:
      - DATABASE_URL=postgresql://logbiz_user:logbiz_password@postgres:5432/logbiz_admin
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - logbiz_network
    command: celery -A app.core.celery worker --loglevel=info

  # Celery Beat (for scheduled tasks)
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: logbiz_celery_beat
    environment:
      - DATABASE_URL=postgresql://logbiz_user:logbiz_password@postgres:5432/logbiz_admin
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - logbiz_network
    command: celery -A app.core.celery beat --loglevel=info

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: logbiz_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - logbiz_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: logbiz_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - logbiz_network

volumes:
  postgres_data:

networks:
  logbiz_network:
    driver: bridge 